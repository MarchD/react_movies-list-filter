{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Search.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","lowerQuery","query","toLowerCase","visibleMovie","filter","movie","includes","map","key","imdbId","Search","updateValue","type","id","placeholder","value","onChange","event","target","App","state","setState","this","htmlFor","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"8vEAIaA,G,kBAAY,SAAC,GAAD,IACrBC,EADqB,EACrBA,MACAC,EAFqB,EAErBA,YACAC,EAHqB,EAGrBA,OACAC,EAJqB,EAIrBA,QAJqB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,IC7CR,IAAMQ,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OACrBC,EADyC,EAAZC,MACVC,cACnBC,EAAeJ,EAAOK,QAAO,SAAAC,GAAK,OACtCA,EAAMhB,MAAMa,cAAcI,SAASN,IAClCK,EAAMf,YAAYY,cAAcI,SAASN,MAG5C,OACE,yBAAKP,UAAU,UACZU,EAAaI,KAAI,SAAAF,GAAK,OACrB,kBAAC,EAAD,eAAWG,IAAKH,EAAMI,QAAYJ,SAkB1CP,EAAWD,aAAe,CACxBE,OAAQ,GACRE,MAAO,I,WCjCIS,EAAS,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAOU,EAAV,EAAUA,YAAV,OACpB,2BACEC,KAAK,OACLC,GAAG,eACHpB,UAAU,QACVqB,YAAY,mBACZC,MAAOd,EACPe,SAAU,SAAAC,GAAK,OACbN,EAAYM,EAAMC,OAAOH,WAU/BL,EAAOb,aAAe,CACpBI,MAAO,IChBF,IAAMkB,EAAb,4MACEC,MAAQ,CACNnB,MAAO,IAFX,EAKEU,YAAc,SAACI,GACb,EAAKM,SAAS,CAAEpB,MAAOc,KAN3B,uDASY,IACAd,EAAUqB,KAAKF,MAAfnB,MAER,OACE,yBAAKR,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAO8B,QAAQ,eAAe9B,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,kBAAC,EAAD,CAAQQ,MAAOA,EAAOU,YAAaW,KAAKX,iBAK9C,kBAAC,EAAD,CAAYZ,OAAQyB,EAAkBvB,MAAOA,KAE/C,yBAAKR,UAAU,WAAf,0BA7BR,GAAyBgC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f38f094c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = (\n  { title,\n    description,\n    imgUrl,\n    imdbUrl },\n) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, query }) => {\n  const lowerQuery = query.toLowerCase();\n  const visibleMovie = movies.filter(movie => (\n    movie.title.toLowerCase().includes(lowerQuery)\n  || movie.description.toLowerCase().includes(lowerQuery)\n  ));\n\n  return (\n    <div className=\"movies\">\n      {visibleMovie.map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  query: PropTypes.string,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n  query: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Search = ({ query, updateValue }) => (\n  <input\n    type=\"text\"\n    id=\"search-query\"\n    className=\"input\"\n    placeholder=\"Type search word\"\n    value={query}\n    onChange={event => (\n      updateValue(event.target.value)\n    )}\n  />\n);\n\nSearch.propTypes = {\n  query: PropTypes.string,\n  updateValue: PropTypes.func.isRequired,\n};\n\nSearch.defaultProps = {\n  query: '',\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { Search } from './components/Search';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  updateValue = (value) => {\n    this.setState({ query: value });\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <div className=\"field\">\n              <label htmlFor=\"search-query\" className=\"label\">\n                Search movie\n              </label>\n\n              <div className=\"control\">\n                <Search query={query} updateValue={this.updateValue} />\n              </div>\n            </div>\n          </div>\n\n          <MoviesList movies={moviesFromServer} query={query} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}